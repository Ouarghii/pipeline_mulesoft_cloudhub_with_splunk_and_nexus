name: CI/CD Pipeline GITHUB/CloudHub

permissions:
  contents: write

on: push

jobs:
  create-settings-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Git identity
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "Ferielkraiem2000"

      - name: Create and push Maven settings file
        run: |
          cat << EOF > settings.xml
          <settings>
            <servers>
              <server>
                <id>anypoint-repo</id>
                <username>${{ secrets.ANYPOINT_CLIENT_ID }}</username>
                <password>${{ secrets.ANYPOINT_CLIENT_SECRET }}</password>
              </server>
              <server>
                <id>github-repo</id>
                <username>${{ secrets.GIT_EMAIL }}</username>
                <password>${{ secrets.GIT_TOKEN }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>anypoint-profile</id>
                <properties>
                  <anypoint.clientId>${{ secrets.ANYPOINT_CLIENT_ID }}</anypoint.clientId>
                  <anypoint.clientSecret>${{ secrets.ANYPOINT_CLIENT_SECRET }}</anypoint.clientSecret>
                </properties>
              </profile>
              <profile>
                <id>github-profile</id>
                <properties>
                  <github.email>${{ secrets.GIT_EMAIL }}</github.email>
                  <github.token>${{ secrets.GIT_TOKEN }}</github.token>
                </properties>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>anypoint-profile</activeProfile>
              <activeProfile>github-profile</activeProfile>
            </activeProfiles>
          </settings>
          EOF

          git add settings.xml
          git commit -m "Add Maven settings file" || echo "Nothing to commit"
          git push origin HEAD:${{ github.ref_name }}

  create-update-parent-pom:
    runs-on: ubuntu-latest
    needs: create-settings-file
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: Ferielkraiem2000/pipeline_mulesoft_cloudhub
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up Git identity
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "Ferielkraiem2000"

      - name: Create and Update Parent POM File
        run: |
          ANYPOINT_ID=$(sed -n "/<id>anypoint-repo<\/id>/,/<\/server>/ s/.*<username>\(.*\)<\/username>.*/\1/p" settings.xml)
          ANYPOINT_SECRET=$(sed -n "/<id>anypoint-repo<\/id>/,/<\/server>/ s/.*<password>\(.*\)<\/password>.*/\1/p" settings.xml)

          cat << EOF > parent_pom.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.mycompany</groupId>
            <artifactId>parent-pom</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <packaging>pom</packaging>
            <name>parent-pom</name>
            <properties>
              <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
              <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
              <app.runtime>4.7.0</app.runtime>
              <mule.maven.plugin.version>4.2.0</mule.maven.plugin.version>
            </properties>
            <build>
              <plugins>
              </plugins>
            </build>
          </project>
          EOF

          PLUGIN_EXISTS=$(grep -c "<groupId>org.mule.tools.maven</groupId>" parent_pom.xml)
          if [ "$PLUGIN_EXISTS" -eq 0 ]; then
            if [ "${{ github.ref_name }}" == "main" ] || [ "${{ github.ref_name }}" == "master" ]; then
              CONFIGURATION="<plugin>\n<groupId>org.mule.tools.maven</groupId>\n<artifactId>mule-maven-plugin</artifactId>\n<version>\${mule.maven.plugin.version}</version>\n<extensions>true</extensions>\n<configuration>\n<cloudHubDeployment>\n<uri>https://anypoint.mulesoft.com/</uri>\n<muleVersion>4.7.0</muleVersion>\n<connectedAppClientId>${ANYPOINT_ID}</connectedAppClientId>\n<connectedAppClientSecret>${ANYPOINT_SECRET}</connectedAppClientSecret>\n<connectedAppGrantType>client_credentials</connectedAppGrantType>\n<applicationName>${{ secrets.APPLICATION_NAME }}</applicationName>\n<businessGroup>${{ secrets.BUSINESS_GROUP }}</businessGroup>\n<environment>${{ secrets.PRODUCTION_ENVIRONMENT }}</environment>\n<workers>1</workers>\n<objectStoreV2>true</objectStoreV2>\n</cloudHubDeployment>\n</configuration>\n</plugin>"
            else
              CONFIGURATION="<plugin>\n<groupId>org.mule.tools.maven</groupId>\n<artifactId>mule-maven-plugin</artifactId>\n<version>\${mule.maven.plugin.version}</version>\n<extensions>true</extensions>\n<configuration>\n<cloudHubDeployment>\n<uri>https://anypoint.mulesoft.com/</uri>\n<muleVersion>4.7.0</muleVersion>\n<connectedAppClientId>${ANYPOINT_ID}</connectedAppClientId>\n<connectedAppClientSecret>${ANYPOINT_SECRET}</connectedAppClientSecret>\n<connectedAppGrantType>client_credentials</connectedAppGrantType>\n<applicationName>${{ github.ref_name }}</applicationName>\n<businessGroup>${{ secrets.BUSINESS_GROUP }}</businessGroup>\n<environment>${{ github.ref_name }}</environment>\n<workers>1</workers>\n<objectStoreV2>true</objectStoreV2>\n</cloudHubDeployment>\n</configuration>\n</plugin>"
            fi
            sed -i "/<\/plugins>/i $CONFIGURATION" parent_pom.xml
            git add parent_pom.xml
            git commit -m "Create and update Parent POM file"
            git push origin HEAD:${{ github.ref_name }}
          fi

  update-project-pom:
    runs-on: ubuntu-latest
    needs: create-update-parent-pom
    steps:
      - name: Set up Git identity
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "Ferielkraiem2000"

      - name: Update Project POM File
        run: |
          GIT_EMAIL_USER=$(sed -n '/<id>github-repo<\/id>/,/<\/server>/ s/.*<username>\(.*\)<\/username>.*/\1/p' settings.xml)
          GIT_TOKEN_USER=$(sed -n '/<id>github-repo<\/id>/,/<\/server>/ s/.*<password>\(.*\)<\/password>.*/\1/p' settings.xml)
          git config --global user.email "${GIT_EMAIL_USER}"
          git config --global user.name "Ferielkraiem2000"

          touch update-projectPOM.sh
          echo '#!/bin/bash' > update-projectPOM.sh
          echo 'PARENT_GROUP_ID=$(grep -oPm1 "(?<=<groupId>)[^<]+" parent_pom.xml)' >> update-projectPOM.sh
          echo 'PARENT_ARTIFACT_ID=$(grep -oPm1 "(?<=<artifactId>)[^<]+" parent_pom.xml)' >> update-projectPOM.sh
          echo 'PARENT_VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" parent_pom.xml)' >> update-projectPOM.sh
          echo 'echo "The groupId is: $PARENT_GROUP_ID"' >> update-projectPOM.sh
          echo 'echo "The artifactId is: $PARENT_ARTIFACT_ID"' >> update-projectPOM.sh
          echo 'echo "The version is: $PARENT_VERSION"' >> update-projectPOM.sh
          echo 'PARENT_EXISTS=$(grep -c "<parent>" pom.xml)' >> update-projectPOM.sh
          echo 'if [ "$PARENT_EXISTS" -eq 0 ]; then' >> update-projectPOM.sh
          echo '  PARENT_INCLUSION="<parent>\n<groupId>${PARENT_GROUP_ID}</groupId>\n<artifactId>${PARENT_ARTIFACT_ID}</artifactId>\n<version>${PARENT_VERSION}</version>\n</parent>"' >> update-projectPOM.sh
          echo '  sed -i "/<project>/a $PARENT_INCLUSION" pom.xml' >> update-projectPOM.sh
          echo 'fi' >> update-projectPOM.sh
          echo 'git add pom.xml' >> update-projectPOM.sh
          echo 'git commit -m "Update project POM file to include Parent POM" || echo "Nothing to commit"' >> update-projectPOM.sh
          echo 'git push origin HEAD:${{ github.ref_name }}' >> update-projectPOM.sh
          chmod +x update-projectPOM.sh
          ./update-projectPOM.sh

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: update-project-pom
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and Deploy to CloudHub
        run: |
          mvn clean deploy -s settings.xml -DskipTests
