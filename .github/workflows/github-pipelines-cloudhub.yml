- name: Create and Execute the Script which updates the POM
  env:
    GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
    GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
    ANYPOINT_USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
    ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
    BUSINESS_GROUP: ${{ secrets.BUSINESS_GROUP }}
    GIT_BRANCH: ${{ github.ref_name }}
    GIT_REPO: ${{ secrets.GIT_REPO }}
  run: |
    git config --global user.email "${GIT_EMAIL}"
    git remote add dev https://x-access-token:${GIT_TOKEN}@github.com/Ferielkraiem2000/${GIT_REPO}.git

    cat << 'EOF' > update-pom.sh
#!/bin/bash

ANYPOINT_USERNAME="${ANYPOINT_USERNAME}"
ANYPOINT_PASSWORD="${ANYPOINT_PASSWORD}"
BUSINESS_GROUP="${BUSINESS_GROUP}"
PLUGIN_EXISTS=$(grep -c "<groupId>org.mule.tools.maven</groupId>" pom.xml)

if [ "$PLUGIN_EXISTS" -eq 0 ]; then
  CONFIGURATION=$(cat <<EOC
<plugin>
    <groupId>org.mule.tools.maven</groupId>
    <artifactId>mule-maven-plugin</artifactId>
    <version>${mule.maven.plugin.version}</version>
    <extensions>true</extensions>
    <configuration>
      <cloudHubDeployment>
        <uri>https://anypoint.mulesoft.com/</uri>
        <muleVersion>4.7.0</muleVersion>
        <username>${ANYPOINT_USERNAME}</username>
        <password>${ANYPOINT_PASSWORD}</password>
        <applicationName>${GIT_BRANCH}</applicationName>
        <businessGroup>${BUSINESS_GROUP}</businessGroup>
        <environment>${GIT_BRANCH}</environment>
        <workers>1</workers>
        <objectStoreV2>true</objectStoreV2>
      </cloudHubDeployment>
    </configuration>
</plugin>
EOC
)

  echo "$CONFIGURATION" > temp-config.xml
  sed -i "/<\/plugins>/r temp-config.xml" pom.xml
  rm temp-config.xml

  git add pom.xml
  git commit -m "Update pom.xml with cloudHubDeployment configuration"
  git push dev ${GIT_BRANCH}
fi
EOF

    chmod +x update-pom.sh
    ./update-pom.sh


  build:
    runs-on: ubuntu-latest
    needs: update-pom
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build
        run: mvn clean package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Deploy to CloudHub
        run: mvn deploy -DmuleDeploy -DskipTests
